version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    - "29092:29092"
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
  app:
    build: .
    depends_on:
      - kafka
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]

    # networks:
    #   - kafka-net
    ports:
      - "5000:80"
# networks:
#   kafka-net:
#     driver: bridge
  # producer:
  #   image: qnib/golang-kafka-producer:2018-05-01.12
  #   deploy:
  #     replicas: 3
  #   depends_on:
  #     - kafka
  #   environment:
  #     - KAFKA_kafka=tasks.kafka
  #     - KAFKA_CREATE_TOPICS=test:1:1,scaled:2:2
  #     - KAFKA_TOPIC=scaled
  #     - MSG_COUNT=-1
   